enum DocKeyPhotoMemo { title, createdBy, quantity }

class Inventory {
  String? docId; // generated by Firestore
  String createdBy; // email
  String title;
  String quantity;

  Inventory({
    this.docId,
    required this.createdBy,
    required this.title,
    required this.quantity,
  });

  Inventory clone() {
    var copy = Inventory(
      docId: docId,
      createdBy: createdBy,
      title: title,
      quantity: quantity,
    );
    return copy;
  }

  void copyFrom(Inventory i) {
    docId = i.docId;
    createdBy = i.createdBy;
    title = title;
    quantity = quantity;
  }

  factory Inventory.fromFirestoreDoc({
    required Map<String, dynamic> doc,
    required String docId,
  }) {
    return Inventory(
      docId: docId,
      createdBy: doc[DocKeyPhotoMemo.createdBy.name] ?? '',
      title: doc[DocKeyPhotoMemo.title.name] ?? '',
      quantity: doc[DocKeyPhotoMemo.quantity.name] ?? '',
    );
  }

  Map<String, dynamic> toFirestoreDoc() {
    return {
      DocKeyPhotoMemo.title.name: title,
      DocKeyPhotoMemo.createdBy.name: createdBy,
      DocKeyPhotoMemo.quantity.name: quantity,
    };
  }

  static String? validateTitle(String? value) {
    String? lowerCase = value?.toLowerCase();
    return value == null || value.trim().length < 2 ? 'Title too short' : null;
  }

  // static int? validateQuantity(int? value) {
  //   // return value == null || value.trim().length < 7 ? 'Memo too short' : null;
  // }
}
